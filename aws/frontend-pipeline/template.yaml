AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM Template for Frontend CI/CD Pipeline

Parameters:
  GitHubConnectionName:
    Type: String
  GitHubFullRepositoryId:
    Type: String
  ClientBucketName:
    Type: String
  CloudFrontDistributionId:
    Type: String

Resources:
  GitHubConnection:
    Type: AWS::CodeConnections::Connection
    Properties:
      ConnectionName: !Ref GitHubConnectionName
      ProviderType: GitHub

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}-CodePipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref GitHubConnection
                FullRepositoryId: !Ref GitHubFullRepositoryId
                BranchName: main
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuild
              InputArtifacts:
                - Name: SourceOutput

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - codeconnections:*           
                  - codestar-connections:*
                  - iam:PassRole
                Resource: '*'

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ClientBucketName
            Value: !Ref ClientBucketName
          - Name: ClientDistributionId
            Value: !Ref CloudFrontDistributionId
      Source:
        Type: CODEPIPELINE
        BuildSpec: aws/frontend-pipeline/buildspec.yaml

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - acm:*
                  - apigateway:*
                  - aws:RequestTag/*
                  - aws:TagKeys
                  - cloudformation:*
                  - cloudfront:*
                  - codebuild:*
                  - iam:*
                  - kms:*
                  - lambda:*
                  - logs:*
                  - s3:*
                  - sam:*
                  - ssm:*
                Resource: '*'

  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucket
      VersioningConfiguration:
        Status: Enabled

Outputs:
  PipelineUrl:
    Description: CodePipeline URL
    Value: !Sub https://console.aws.amazon.com/codesuite/codepipeline/pipelines/${CodePipeline}/view?region=${AWS::Region}